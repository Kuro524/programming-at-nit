/*/////////////////////////////////////////////////////////////////////////////////////
課題21　選択ソート(整列)
　for文を使って、乱数で初期化された要素数が100の配列の中の値を、選択ソート（下記選択ソート参照）
 で降順に並べて表示するプログラムを作成しなさい。
 　日本語手続きでは配列の要素数を5としていたが、プログラムでは要素数は100とする。
  　ただし、プログラム中で配列の要素数を使う場合、100ではなく DATA_NOを使うこと
   　（99は、DATA_NO - 1 を使うこと）。
	　また、要素数が100の配列の中の値を乱数で初期化する処理と表示処理はあらかじめ
	 　作成済みである。

	  選択ソート：
	  配列の中から最大値を見つけ配列の0番目と入れ替える。
	  配列の1番目以降の中で最大値を見つけ1番目と入れ替える。
	  配列の2番目以降の中で最大値を見つけて2番目と入れ替える。
	  ．．．。
	  これを繰り返し、配列中の数値を降順（大きい順）に並べ替える

	  キーワード：for文、二重の繰り返し
	  最終更新日：2016.03.28
	  */
#define _CRT_SECURE_NO_WARNINGS  // 余計な警告が出ないようにする
#include	<stdio.h>
#include	<stdlib.h>
#include	<time.h>

int	main(void)
{
	const int	DATA_NO = 100;	// 定数定義　プログラムの中では100を使わずDATA_NOを使うこと
	int	data[DATA_NO];
	int i, j;
	int maxi;
	int tmp;

	//////// 配列を乱数（0~999）で初期化する処理（作成済み）
	srand((unsigned int)time(NULL));  // 時刻から乱数の種を生成
	for (i = 0; i < DATA_NO; i++)
	{
		// 乱数を1000で割った余り（0~999の値）を配列のi番目に代入
		data[i] = rand() % 1000;
	}
	// for文の中でint iとすると、for文の外ではiは使えない
	//////// ここまで、配列を乱数で初期化する処理（作成済み）

	//////// 配列の各要素の値を10個ずつ表示する処理（作成済み）
	// 並べ替え前の配列の各要素の値を表示
	for (i = 0; i < DATA_NO; i++)
	{
		if (i % 10 == 0)
		{
			printf("\n");
		}
		printf("%4d", data[i]);  //10進整数4桁表示
	}
	printf("\n");
	//////// ここまで、配列の各要素の値を表示する処理（作成済み）

	for (i = 0; i < DATA_NO - 1; i++) {
		for (j = i; j < DATA_NO; j++) {
			if (data[i] < data[j]) {
				tmp = data[i];
				data[i] = data[j];
				data[j] = tmp;
			}
		}
	}

	//////// 配列の各要素の値を10個ずつ表示する処理（作成済み）
	// 並べ替え後の配列の各要素の値を表示
	for (i = 0; i < DATA_NO; i++)
	{
		if (i % 10 == 0)
		{
			printf("\n");
		}
		printf("%4d", data[i]);  //10進整数4桁表示
	}
	printf("\n");
	//////// ここまで、配列の各要素の値を表示する処理（作成済み）

	return 0;
}
